#!/bin/bash

# ===========================
# Autos - Dispatcher de Comandos
# ===========================
# Permite executar scripts organizados em subdiretórios de forma unificada.
# Também lista comandos disponíveis e exibe ajuda contextual.
#
# Uso:
#   autos <comando> [argumentos...]
#   autos --list
#   autos --help
# ===========================

# Diretório base onde os scripts estão instalados
BASE_DIR=$(dirname "$(realpath "$0")")

# Função para localizar um script executável pelo nome, ignorando o próprio autos e o setup.sh
find_script() {
    local cmd=$1
    # Procura recursivamente por arquivos executáveis com o nome do comando
    find "$BASE_DIR" -type f -name "$cmd" -perm -u+x ! -name "autos" ! -name "setup.sh" | head -n 1
}

# Lista todos os comandos disponíveis (scripts executáveis)
list_commands() {
    echo "Comandos disponíveis:"
    find "$BASE_DIR" -type f -perm -u+x ! -name "autos" ! -name "setup.sh" | while read -r script; do
        echo "  - $(basename "$script")"
    done | sort | uniq
}

# Exibe mensagem de ajuda e lista comandos
show_help() {
    echo "Uso: autos <comando> [argumentos...]"
    echo "      autos [opção]"
    echo ""
    echo "Opções:"
    echo "  -h, --help     Mostra esta ajuda"
    echo "  -l, --list     Lista todos os comandos disponíveis"
    echo ""
    list_commands
}

# Trata opções especiais de linha de comando
case "$1" in
    -h|--help)
        show_help
        exit 0
        ;;
    -l|--list)
        list_commands
        exit 0
        ;;
esac

# Se nenhum comando foi informado, mostra ajuda e encerra
if [ -z "$1" ]; then
    show_help
    exit 1
fi

# Nome do comando a ser executado
COMMAND="$1"
shift  # Remove o comando dos argumentos

# Procura o script correspondente ao comando
COMMAND_SCRIPT=$(find_script "$COMMAND")

# Se encontrou um script executável, repassa os argumentos e executa
if [ -n "$COMMAND_SCRIPT" ] && [ -x "$COMMAND_SCRIPT" ]; then
    "$COMMAND_SCRIPT" "$@"
    exit $?
else
    echo "Erro: Comando '$COMMAND' não encontrado ou não executável" >&2
    echo ""
    show_help
    exit 1
fi