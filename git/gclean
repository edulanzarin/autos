#!/bin/bash

# ===========================
# gclean - Git Clean Simplificado
# ===========================
# Descrição: Limpa branches locais já mergeadas e sincroniza com o remoto
# Uso: autos gclean [--dry-run]
# Opções:
#   --dry-run  Mostra o que seria feito sem executar
# ===========================

# Cores ANSI
GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
BLUE="\e[34m"
BOLD="\e[1m"
RESET="\e[0m"
CHECK="${GREEN}✔${RESET}"
CROSS="${RED}✖${RESET}"
ARROW="${BLUE}➜${RESET}"

# Configurações
DRY_RUN=false
if [[ "$1" == "--dry-run" ]]; then
    DRY_RUN=true
    echo -e "${YELLOW}${BOLD}[Modo Simulação]${RESET} Nenhuma alteração será feita"
fi

# Função para verificar comandos disponíveis
check_command() {
    if ! command -v "$1" &> /dev/null; then
        echo -e "${CROSS} Erro: '$1' não está instalado"
        exit 1
    fi
}

# Verifica dependências
check_command "git"
check_command "xargs"

# Passo 1: Atualizar referências remotas
echo -e "${ARROW} Atualizando referências remotas..."
git fetch --prune

# Passo 2: Limpar branches locais mergeadas
echo -e "${ARROW} Buscando branches locais já mergeadas..."
LOCAL_BRANCHES=$(git branch --merged main | grep -v "main" | grep -v "\*")

if [ -z "$LOCAL_BRANCHES" ]; then
    echo -e "${CHECK} Nenhuma branch mergeada para remover"
else
    echo -e "${YELLOW}Branches a serem removidas:${RESET}"
    echo "$LOCAL_BRANCHES" | sed 's/^/  • /'

    if ! $DRY_RUN; then
        echo
        echo -e "${ARROW} Removendo branches..."
        echo "$LOCAL_BRANCHES" | xargs -n 1 git branch -d
        echo -e "${CHECK} Branches removidas com sucesso!"
    fi
fi

# Passo 3: Limpar branches remotas deletadas
echo -e "${ARROW} Verificando referências remotas obsoletas..."
REMOTE_BRANCHES=$(git remote prune origin --dry-run | grep "origin/.*will be pruned")

if [ -z "$REMOTE_BRANCHES" ]; then
    echo -e "${CHECK} Nenhuma referência remota obsoleta"
else
    echo -e "${YELLOW}Referências remotas a serem limpas:${RESET}"
    echo "$REMOTE_BRANCHES" | sed 's/^/  • /'

    if ! $DRY_RUN; then
        echo
        echo -e "${ARROW} Limpando referências remotas..."
        git remote prune origin
        echo -e "${CHECK} Referências remotas limpas!"
    fi
fi

# Passo 4: Limpeza de arquivos não rastreados (opcional)
echo -e "${ARROW} Verificando arquivos não rastreados..."
UNTRACKED=$(git clean -n -d)
if [ -z "$UNTRACKED" ]; then
    echo -e "${CHECK} Nenhum arquivo não rastreado encontrado"
else
    echo -e "${YELLOW}Arquivos não rastreados:${RESET}"
    echo "$UNTRACKED" | sed 's/^/  • /'

    if ! $DRY_RUN; then
        echo
        read -p "Deseja remover os arquivos não rastreados? [y/N] " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            git clean -f -d
            echo -e "${CHECK} Arquivos removidos!"
        else
            echo -e "${CROSS} Arquivos mantidos"
        fi
    fi
fi

echo -e "${GREEN}${BOLD}✔ Limpeza concluída com sucesso!${RESET}"
